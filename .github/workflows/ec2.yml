name: 'GCP Terraform'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
      inputs:
        auto_approve:
          description: 'Should we auto-approve apply?'
          required: true
          default: 'false'

permissions:
  contents: read
  id-token: 'write'

jobs:
  terraform-gcp:
    name: 'Terraform-GCP'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Authenticate Google Cloud using Workload Identity Federation
    - name: Authenticate Google Cloud
      uses: google-github-actions/auth@v2 
      with:
        workload_identity_provider: 'projects/330224828591/locations/global/workloadIdentityPools/terrafom-github/providers/github'
        service_account: 'terraform-sa@fifth-catcher-418014.iam.gserviceaccount.com'

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Terraform Format (checks for code formatting)
    - name: Terraform Fmt
      run: terraform fmt -check -diff


    # Terraform Init (initializes the working directory)
    - name: Terraform Init
      run: terraform init 
    # Terraform Validate (validates the configuration files)
    - name: Terraform Validate
      run: terraform validate


    # Terraform Plan (creates an execution plan)
    - name: Terraform Plan
      run: terraform plan -input=false

        # Manual Approval Step (Mimic Approval via 'auto_approve' parameter)
    - name: Wait for Approval (Manual Confirmation)
      if: ${{ github.event.inputs.auto_approve == 'false' }}
      run: |
          echo "Waiting for manual approval to apply changes..."
          sleep 600  # 10 minutes, adjust as needed
  
      # Apply Terraform Changes (only if approval is given)
    - name: Terraform Apply
     if: ${{ github.event.inputs.auto_approve == 'true' }}
     run: terraform apply -auto-approve -input=false
  
      # If auto_approve is false, do not apply, just output a message
    - name: Skip Apply (Approval Needed)
      if: ${{ github.event.inputs.auto_approve == 'false' }}
      run: echo "Terraform Apply skipped. Manual approval required."  
   
    - name: Wait for 30 seconds
      run: sleep 30  # 600 seconds = 10 minutes

    # Terraform Destroy (destroys the resources after 10 minutes)
    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false
